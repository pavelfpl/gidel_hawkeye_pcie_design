// gidel_hawkeye_pcie_altera_mm_interconnect_181_bbwzt2q.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module gidel_hawkeye_pcie_altera_mm_interconnect_181_bbwzt2q (
		input  wire         pcie_a10_hip_0_coreclkout_hip_clk,                                    //                                  pcie_a10_hip_0_coreclkout_hip.clk
		input  wire         pcie_a10_hip_0_rxm_bar0_translator_reset_reset_bridge_in_reset_reset, // pcie_a10_hip_0_rxm_bar0_translator_reset_reset_bridge_in_reset.reset
		input  wire [63:0]  pcie_a10_hip_0_rxm_bar0_address,                                      //                                        pcie_a10_hip_0_rxm_bar0.address
		output wire         pcie_a10_hip_0_rxm_bar0_waitrequest,                                  //                                                               .waitrequest
		input  wire [5:0]   pcie_a10_hip_0_rxm_bar0_burstcount,                                   //                                                               .burstcount
		input  wire [15:0]  pcie_a10_hip_0_rxm_bar0_byteenable,                                   //                                                               .byteenable
		input  wire         pcie_a10_hip_0_rxm_bar0_read,                                         //                                                               .read
		output wire [127:0] pcie_a10_hip_0_rxm_bar0_readdata,                                     //                                                               .readdata
		output wire         pcie_a10_hip_0_rxm_bar0_readdatavalid,                                //                                                               .readdatavalid
		input  wire         pcie_a10_hip_0_rxm_bar0_write,                                        //                                                               .write
		input  wire [127:0] pcie_a10_hip_0_rxm_bar0_writedata,                                    //                                                               .writedata
		output wire [63:0]  pcie_a10_hip_0_txs_address,                                           //                                             pcie_a10_hip_0_txs.address
		output wire         pcie_a10_hip_0_txs_write,                                             //                                                               .write
		output wire         pcie_a10_hip_0_txs_read,                                              //                                                               .read
		input  wire [127:0] pcie_a10_hip_0_txs_readdata,                                          //                                                               .readdata
		output wire [127:0] pcie_a10_hip_0_txs_writedata,                                         //                                                               .writedata
		output wire [5:0]   pcie_a10_hip_0_txs_burstcount,                                        //                                                               .burstcount
		output wire [15:0]  pcie_a10_hip_0_txs_byteenable,                                        //                                                               .byteenable
		input  wire         pcie_a10_hip_0_txs_readdatavalid,                                     //                                                               .readdatavalid
		input  wire         pcie_a10_hip_0_txs_waitrequest,                                       //                                                               .waitrequest
		output wire         pcie_a10_hip_0_txs_chipselect                                         //                                                               .chipselect
	);

	wire          pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_waitrequest;   // pcie_a10_hip_0_txs_translator:uav_waitrequest -> pcie_a10_hip_0_rxm_bar0_translator:uav_waitrequest
	wire  [127:0] pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_readdata;      // pcie_a10_hip_0_txs_translator:uav_readdata -> pcie_a10_hip_0_rxm_bar0_translator:uav_readdata
	wire          pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_debugaccess;   // pcie_a10_hip_0_rxm_bar0_translator:uav_debugaccess -> pcie_a10_hip_0_txs_translator:uav_debugaccess
	wire   [63:0] pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_address;       // pcie_a10_hip_0_rxm_bar0_translator:uav_address -> pcie_a10_hip_0_txs_translator:uav_address
	wire          pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_read;          // pcie_a10_hip_0_rxm_bar0_translator:uav_read -> pcie_a10_hip_0_txs_translator:uav_read
	wire   [15:0] pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_byteenable;    // pcie_a10_hip_0_rxm_bar0_translator:uav_byteenable -> pcie_a10_hip_0_txs_translator:uav_byteenable
	wire          pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_readdatavalid; // pcie_a10_hip_0_txs_translator:uav_readdatavalid -> pcie_a10_hip_0_rxm_bar0_translator:uav_readdatavalid
	wire          pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_lock;          // pcie_a10_hip_0_rxm_bar0_translator:uav_lock -> pcie_a10_hip_0_txs_translator:uav_lock
	wire          pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_write;         // pcie_a10_hip_0_rxm_bar0_translator:uav_write -> pcie_a10_hip_0_txs_translator:uav_write
	wire  [127:0] pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_writedata;     // pcie_a10_hip_0_rxm_bar0_translator:uav_writedata -> pcie_a10_hip_0_txs_translator:uav_writedata
	wire    [9:0] pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_burstcount;    // pcie_a10_hip_0_rxm_bar0_translator:uav_burstcount -> pcie_a10_hip_0_txs_translator:uav_burstcount

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (64),
		.AV_DATA_W                   (128),
		.AV_BURSTCOUNT_W             (6),
		.AV_BYTEENABLE_W             (16),
		.UAV_ADDRESS_W               (64),
		.UAV_BURSTCOUNT_W            (10),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (16),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (1),
		.UAV_CONSTANT_BURST_BEHAVIOR (1),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) pcie_a10_hip_0_rxm_bar0_translator (
		.clk                    (pcie_a10_hip_0_coreclkout_hip_clk),                                          //                       clk.clk
		.reset                  (pcie_a10_hip_0_rxm_bar0_translator_reset_reset_bridge_in_reset_reset),       //                     reset.reset
		.uav_address            (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (pcie_a10_hip_0_rxm_bar0_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (pcie_a10_hip_0_rxm_bar0_waitrequest),                                        //                          .waitrequest
		.av_burstcount          (pcie_a10_hip_0_rxm_bar0_burstcount),                                         //                          .burstcount
		.av_byteenable          (pcie_a10_hip_0_rxm_bar0_byteenable),                                         //                          .byteenable
		.av_read                (pcie_a10_hip_0_rxm_bar0_read),                                               //                          .read
		.av_readdata            (pcie_a10_hip_0_rxm_bar0_readdata),                                           //                          .readdata
		.av_readdatavalid       (pcie_a10_hip_0_rxm_bar0_readdatavalid),                                      //                          .readdatavalid
		.av_write               (pcie_a10_hip_0_rxm_bar0_write),                                              //                          .write
		.av_writedata           (pcie_a10_hip_0_rxm_bar0_writedata),                                          //                          .writedata
		.av_beginbursttransfer  (1'b0),                                                                       //               (terminated)
		.av_begintransfer       (1'b0),                                                                       //               (terminated)
		.av_chipselect          (1'b0),                                                                       //               (terminated)
		.av_lock                (1'b0),                                                                       //               (terminated)
		.av_debugaccess         (1'b0),                                                                       //               (terminated)
		.uav_clken              (),                                                                           //               (terminated)
		.av_clken               (1'b1),                                                                       //               (terminated)
		.uav_response           (2'b00),                                                                      //               (terminated)
		.av_response            (),                                                                           //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                       //               (terminated)
		.av_writeresponsevalid  ()                                                                            //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (64),
		.AV_DATA_W                      (128),
		.UAV_DATA_W                     (128),
		.AV_BURSTCOUNT_W                (6),
		.AV_BYTEENABLE_W                (16),
		.UAV_BYTEENABLE_W               (16),
		.UAV_ADDRESS_W                  (64),
		.UAV_BURSTCOUNT_W               (10),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (16),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pcie_a10_hip_0_txs_translator (
		.clk                    (pcie_a10_hip_0_coreclkout_hip_clk),                                          //                      clk.clk
		.reset                  (pcie_a10_hip_0_rxm_bar0_translator_reset_reset_bridge_in_reset_reset),       //                    reset.reset
		.uav_address            (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_burstcount),    //                         .burstcount
		.uav_read               (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_read),          //                         .read
		.uav_write              (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_write),         //                         .write
		.uav_waitrequest        (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_byteenable),    //                         .byteenable
		.uav_readdata           (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_readdata),      //                         .readdata
		.uav_writedata          (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_writedata),     //                         .writedata
		.uav_lock               (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_lock),          //                         .lock
		.uav_debugaccess        (pcie_a10_hip_0_rxm_bar0_translator_avalon_universal_master_0_debugaccess),   //                         .debugaccess
		.av_address             (pcie_a10_hip_0_txs_address),                                                 //      avalon_anti_slave_0.address
		.av_write               (pcie_a10_hip_0_txs_write),                                                   //                         .write
		.av_read                (pcie_a10_hip_0_txs_read),                                                    //                         .read
		.av_readdata            (pcie_a10_hip_0_txs_readdata),                                                //                         .readdata
		.av_writedata           (pcie_a10_hip_0_txs_writedata),                                               //                         .writedata
		.av_burstcount          (pcie_a10_hip_0_txs_burstcount),                                              //                         .burstcount
		.av_byteenable          (pcie_a10_hip_0_txs_byteenable),                                              //                         .byteenable
		.av_readdatavalid       (pcie_a10_hip_0_txs_readdatavalid),                                           //                         .readdatavalid
		.av_waitrequest         (pcie_a10_hip_0_txs_waitrequest),                                             //                         .waitrequest
		.av_chipselect          (pcie_a10_hip_0_txs_chipselect),                                              //                         .chipselect
		.av_begintransfer       (),                                                                           //              (terminated)
		.av_beginbursttransfer  (),                                                                           //              (terminated)
		.av_writebyteenable     (),                                                                           //              (terminated)
		.av_lock                (),                                                                           //              (terminated)
		.av_clken               (),                                                                           //              (terminated)
		.uav_clken              (1'b0),                                                                       //              (terminated)
		.av_debugaccess         (),                                                                           //              (terminated)
		.av_outputenable        (),                                                                           //              (terminated)
		.uav_response           (),                                                                           //              (terminated)
		.av_response            (2'b00),                                                                      //              (terminated)
		.uav_writeresponsevalid (),                                                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                                        //              (terminated)
	);

endmodule
